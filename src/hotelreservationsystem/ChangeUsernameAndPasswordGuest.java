/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelreservationsystem;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Mikaela Padayachie
 */
public class ChangeUsernameAndPasswordGuest extends javax.swing.JFrame {

    private static String temporaryPassword;

    // Defines the database connection URL
    String databaseURL = "jdbc:ucanaccess://HotelReservation.accdb";

    /**
     * Creates new form ChangeUsernameAndPasswordGuest
     *
     * @param tempPassword
     */
    public ChangeUsernameAndPasswordGuest(String tempPassword) {
        ChangeUsernameAndPasswordGuest.temporaryPassword = tempPassword;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEditUsernameAndPassword = new javax.swing.JLabel();
        lblEnterNewUsername = new javax.swing.JLabel();
        txtfCurrentPassword = new javax.swing.JTextField();
        lblEnterCurrentPassword = new javax.swing.JLabel();
        txtfNewUsername = new javax.swing.JTextField();
        lblEnterNewPasswordAgain = new javax.swing.JLabel();
        lblEnterNewPassword = new javax.swing.JLabel();
        pwfNewPassword = new javax.swing.JPasswordField();
        pwfNewPasswordAgain = new javax.swing.JPasswordField();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEditUsernameAndPassword.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblEditUsernameAndPassword.setForeground(new java.awt.Color(0, 0, 255));
        lblEditUsernameAndPassword.setText("EDIT YOUR USERNAME AND PASSWORD");

        lblEnterNewUsername.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblEnterNewUsername.setText("Please enter a new username: ");

        txtfCurrentPassword.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtfCurrentPassword.setToolTipText("please enter your current password");
        txtfCurrentPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfCurrentPasswordActionPerformed(evt);
            }
        });

        lblEnterCurrentPassword.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblEnterCurrentPassword.setText("Please enter your current password:");

        txtfNewUsername.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtfNewUsername.setToolTipText("please enter a new username");

        lblEnterNewPasswordAgain.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblEnterNewPasswordAgain.setText("Re-enter new password: ");

        lblEnterNewPassword.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblEnterNewPassword.setText("Please enter a new password: ");

        pwfNewPassword.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pwfNewPassword.setToolTipText("please enter a new password");
        pwfNewPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwfNewPasswordActionPerformed(evt);
            }
        });

        pwfNewPasswordAgain.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pwfNewPasswordAgain.setToolTipText("re-enter password");
        pwfNewPasswordAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwfNewPasswordAgainActionPerformed(evt);
            }
        });

        btnSave.setText("save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblEnterCurrentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblEnterNewUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblEnterNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfNewUsername)
                            .addComponent(txtfCurrentPassword)
                            .addComponent(pwfNewPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEnterNewPasswordAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(pwfNewPasswordAgain)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblEditUsernameAndPassword)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblEditUsernameAndPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfCurrentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnterCurrentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterNewUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfNewUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwfNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwfNewPasswordAgain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnterNewPasswordAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isUsernameValid() {
        String username = txtfNewUsername.getText().trim();

        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a username.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!username.matches("^[a-zA-Z]+[a-zA-Z0-9_.@]*$")) {
            JOptionPane.showMessageDialog(this, "Username must start with letters and can only contain letters, numbers, _, @, and .", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (username.length() > 16) {
            JOptionPane.showMessageDialog(this, "Username should not exceed 16 characters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;

    }

    private boolean isPasswordValid() {
        char[] password = pwfNewPassword.getPassword();
        char[] passwordAgain = pwfNewPasswordAgain.getPassword();

        if (password.length > 10) {
            JOptionPane.showMessageDialog(this, "Password should not exceed 10 characters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (password.length == 0 || passwordAgain.length == 0) {
            JOptionPane.showMessageDialog(this, "Please enter a password.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        String newPassword = new String(password);
        String newPasswordAgain = new String(passwordAgain);

        if (!newPassword.equals(newPasswordAgain)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match. Please re-enter the same password.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (newPassword.length() > 10) {
            JOptionPane.showMessageDialog(this, "Password should not exceed 10 characters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }


    private void pwfNewPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwfNewPasswordActionPerformed

    }//GEN-LAST:event_pwfNewPasswordActionPerformed

    private void pwfNewPasswordAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwfNewPasswordAgainActionPerformed

    }//GEN-LAST:event_pwfNewPasswordAgainActionPerformed

    private void txtfCurrentPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfCurrentPasswordActionPerformed
        // Gets the entered current password
        String enteredPassword = txtfCurrentPassword.getText().trim();

        // Checks if the entered password matches the logged-in user's password
        if (!enteredPassword.equals(GuestHomePage.loggedInPassword)) {
            // Passwords don't match, display an error message
            JOptionPane.showMessageDialog(this, "Incorrect Current Password. Try again.", "Password Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtfCurrentPasswordActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(databaseURL);

            // Checks if the entered information is valid
            if (isUsernameValid() && isPasswordValid()) {
                String newUsername = txtfNewUsername.getText().trim();
                char[] passwordChars = pwfNewPassword.getPassword();
                String newPassword = new String(passwordChars);
                newPassword = newPassword.trim(); // Trims the password if needed
                String currentPassword = txtfCurrentPassword.getText().trim(); // Gets the current password

                // Attempts to update the username and password in the database
                if (User.updateUsernameAndPassword(connection, currentPassword, newUsername, newPassword)) {
                    JOptionPane.showMessageDialog(this, "Username and password successfully updated!");
                } else {
                    JOptionPane.showMessageDialog(this, "Unable to update guest username and password.", "Update Failed", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (SQLException ex) {
            System.out.println("UNABLE TO UPDATE USERNAME AND PASSWORD");
        } finally {
            // Closes the database connection in a finally block
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    System.out.println("UNABLE TO CLOSE CONNECTION");
                }
            }

        }
        new GuestHomePage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeUsernameAndPasswordGuest.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeUsernameAndPasswordGuest.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeUsernameAndPasswordGuest.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeUsernameAndPasswordGuest.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeUsernameAndPasswordGuest(temporaryPassword).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblEditUsernameAndPassword;
    private javax.swing.JLabel lblEnterCurrentPassword;
    private javax.swing.JLabel lblEnterNewPassword;
    private javax.swing.JLabel lblEnterNewPasswordAgain;
    private javax.swing.JLabel lblEnterNewUsername;
    private javax.swing.JPasswordField pwfNewPassword;
    private javax.swing.JPasswordField pwfNewPasswordAgain;
    private javax.swing.JTextField txtfCurrentPassword;
    private javax.swing.JTextField txtfNewUsername;
    // End of variables declaration//GEN-END:variables
}
