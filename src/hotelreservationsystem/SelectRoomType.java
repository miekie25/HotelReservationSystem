/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelreservationsystem;

import javax.swing.JOptionPane;

/**
 * The user selects their preferred type of room on this screen.
 *
 * @author Mikaela Padayachie
 */
public class SelectRoomType extends javax.swing.JFrame {

    /**
     * Creates new form RoomType
     */
    public SelectRoomType() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblSelectRoomType = new javax.swing.JLabel();
        btnViewRoomTypes = new javax.swing.JButton();
        lblRoomSelection = new javax.swing.JLabel();
        cbRoomType = new javax.swing.JComboBox<>();
        btnExit = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnBookRoom = new javax.swing.JButton();
        btnNext1 = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnBack.setText("back");
        btnBack.setToolTipText("go to previous screen");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSelectRoomType.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblSelectRoomType.setText("Select your preferred room type");

        btnViewRoomTypes.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnViewRoomTypes.setText("Click here to view the different room types");
        btnViewRoomTypes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRoomTypesActionPerformed(evt);
            }
        });

        lblRoomSelection.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblRoomSelection.setForeground(new java.awt.Color(0, 0, 255));
        lblRoomSelection.setText("Room Selection");

        cbRoomType.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbRoomType.setMaximumRowCount(3);
        cbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Standard", "Deluxe", "Executive" }));

        btnExit.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnExit.setText("exit");
        btnExit.setToolTipText("click here to terminate your reservation");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnMenu.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnMenu.setText("menu");
        btnMenu.setToolTipText("click here for menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnBookRoom.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnBookRoom.setText("book room");
        btnBookRoom.setToolTipText("click here for menu");
        btnBookRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookRoomActionPerformed(evt);
            }
        });

        btnNext1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnNext1.setText("back");
        btnNext1.setToolTipText("click here for menu");
        btnNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext1ActionPerformed(evt);
            }
        });

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/white background.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnExit)
                                .addGap(88, 88, 88)
                                .addComponent(lblRoomSelection)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                                .addComponent(btnMenu))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnNext1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBookRoom))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelectRoomType)
                            .addComponent(btnViewRoomTypes))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(cbRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 469, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExit)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMenu)
                        .addComponent(lblRoomSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(btnViewRoomTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(lblSelectRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBookRoom)
                    .addComponent(btnNext1))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 302, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewRoomTypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRoomTypesActionPerformed
        new StandardRoomType().setVisible(true); //Takes user to the StandardRoomType screen
        this.setVisible(false); // Closes this screen
    }//GEN-LAST:event_btnViewRoomTypesActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // This method confirms if the user wants to end the program upon pressing the 'exit' button
        int choice = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to exit?\nThis will terminate your current process of making a reservation.",
                "Exit Confirmation", // Displays a confirmation dialog with a warning message
                JOptionPane.YES_NO_OPTION, // Provides Yes and No button
                JOptionPane.WARNING_MESSAGE // Uses a warning icon
        );

        if (choice == JOptionPane.YES_OPTION) {
            System.exit(0); // Terminates the program
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new UsernamePasswordGuest().setVisible(true); // Takes user back to the WelcomeScreen
        this.setVisible(false); // Closes the screen once the user has made a selection
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext1ActionPerformed
        new UsernamePasswordGuest().setVisible(true); // Takes user back to the WelcomeScreen
        this.setVisible(false); // Closes the screen once the user has made a selection
    }//GEN-LAST:event_btnNext1ActionPerformed

    private void btnBookRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookRoomActionPerformed
        // Gets the selected room type from the combo box
        String selectedRoomType = (String) cbRoomType.getSelectedItem();

        // Sets the selected room type in the ReservationDataController
        ReservationDataController.setSelectedRoomType(selectedRoomType);

        // Sets bookingSuccessful as false for now
        boolean bookingSuccessful = false;

        // Creates a new Room instanse based on selected room type
        Room room = new Room(selectedRoomType, true);

        // Books the room based on the selected room type
        if (selectedRoomType.equals("Standard")) {
            if (Room.bookedStandardRooms < Room.MAX_STANDARD_ROOMS) { // If the number of booked rooms are smaller than the maximum standard rooms availible(50)
                room.bookRoom(); // The room is booked and number of standard rooms decrease on database (tblRoom)
                bookingSuccessful = true;
            }
        } else if (selectedRoomType.equals("Deluxe")) {
            if (Room.bookedDeluxeRooms < Room.MAX_DELUXE_ROOMS) { // If the number of booked rooms are smaller than the maximum deluxe rooms availible (50)
                room.bookRoom(); // The room is booked and number of deluxe rooms decrease on database (tblRoom)
                bookingSuccessful = true;
            }

        } else if (selectedRoomType.equals("Executive")) {
            if (Room.bookedExecutiveRooms < Room.MAX_EXECUTIVE_ROOMS) { // If the number of booked rooms are smaller than the maximum executive rooms availible (50)
                room.bookRoom(); // The room is booked and number of executive rooms decrease on database (tblRoom)
                bookingSuccessful = true;
            }
        }

        // Checks if the booking was successful and display a message accordingly
        if (bookingSuccessful) {
            // Displays a success message
            JOptionPane.showMessageDialog(
                    this,
                    "Room booked successfully!",
                    "Booking Confirmation",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            // Displays an error message if booking was not successful
            JOptionPane.showMessageDialog(
                    this,
                    "Room booking failed. No available rooms of the selected type.",
                    "Booking Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }

        //Calculates the total price for the reservation with the method from ReservationDataController
        double totalPrice = ReservationDataController.calculateTotalCost();

        // Opens the payment screen with the total price
        new Payment(totalPrice).setVisible(true);

        //Closes this screen
        this.setVisible(false);
    }//GEN-LAST:event_btnBookRoomActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
       new Menu().setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectRoomType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectRoomType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectRoomType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectRoomType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectRoomType().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBookRoom;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnNext1;
    private javax.swing.JButton btnViewRoomTypes;
    private javax.swing.JComboBox<String> cbRoomType;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblRoomSelection;
    private javax.swing.JLabel lblSelectRoomType;
    // End of variables declaration//GEN-END:variables
}
