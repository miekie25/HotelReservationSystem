/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelreservationsystem;

import hotelreservationsystem.GUIs.CheckInCheckOut;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 * Users enter their personal information and contact details on this screen.
 *
 * @author Mikaela Padayachie
 */
public class PersonalAndContactDetails extends javax.swing.JFrame {

    private static LocalDate checkInDate;
    private static LocalDate checkOutDate;

    // Defines the database connection URL
    String databaseURL = "jdbc:ucanaccess://HotelReservation.accdb";

    /**
     * Creates new form PersonalAndContactDetails
     *
     * @param CID
     * @param COD
     */
    // Creates a new PersonalAndContactDetails form with check-in and check-out dates.
    public PersonalAndContactDetails(LocalDate CID, LocalDate COD) {
        initComponents();
        PersonalAndContactDetails.checkInDate = CID;
        PersonalAndContactDetails.checkOutDate = COD;
    }

    public PersonalAndContactDetails() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        lblPersonalInformationHeading = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblCellphoneNumber = new javax.swing.JLabel();
        txtfFirstName = new javax.swing.JTextField();
        txtfSurname = new javax.swing.JTextField();
        txtfEmailAddress = new javax.swing.JTextField();
        txtfCellphoneNumber = new javax.swing.JTextField();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExit.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnExit.setText("exit");
        btnExit.setToolTipText("click here to terminate your reservation");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnMenu.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnMenu.setText("menu");
        btnMenu.setToolTipText("click here for menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnBack.setText("back");
        btnBack.setToolTipText("go to previous screen");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnNext.setText("next");
        btnNext.setToolTipText("go to next screen");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblFirstName.setText("Name:");

        lblPersonalInformationHeading.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblPersonalInformationHeading.setForeground(new java.awt.Color(0, 0, 255));
        lblPersonalInformationHeading.setText("Please enter your personal information and contact details");

        lblSurname.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblSurname.setText("Surname:");

        lblEmailAddress.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblEmailAddress.setText("Email Address:");

        lblCellphoneNumber.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblCellphoneNumber.setText("Cellphone Number: ");

        txtfFirstName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtfFirstName.setToolTipText("please enter first your name");

        txtfSurname.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtfSurname.setToolTipText("please enter your surname");

        txtfEmailAddress.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtfEmailAddress.setToolTipText("please enter your email address");

        txtfCellphoneNumber.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtfCellphoneNumber.setToolTipText("please enter your cellphone number");
        txtfCellphoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfCellphoneNumberActionPerformed(evt);
            }
        });

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/white background.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnExit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMenu))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNext)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCellphoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtfCellphoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtfEmailAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtfSurname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtfFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPersonalInformationHeading)
                                .addContainerGap(21, Short.MAX_VALUE))))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 621, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnMenu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPersonalInformationHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCellphoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfCellphoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnNext))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 329, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfCellphoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfCellphoneNumberActionPerformed
        
    }//GEN-LAST:event_txtfCellphoneNumberActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // This method confirms if the user wants to end the program upon pressing the 'exit' button
        int choice = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to exit?\nThis will terminate your current process of making a reservation.",
                "Exit Confirmation", // Displays a confirmation dialog with a warning message
                JOptionPane.YES_NO_OPTION, // Provides Yes and No button
                JOptionPane.WARNING_MESSAGE // Uses a warning icon
        );

        if (choice == JOptionPane.YES_OPTION) {
            System.exit(0); // Terminates the program
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new CheckInCheckOut().setVisible(true); // Takes user back to the CheckInCheckOut screen
        this.setVisible(false); // Closes this screen 
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        if (isPersonalInfoValid()) {
            // Gets user input from GUI
            String firstName = txtfFirstName.getText();
            String lastName = txtfSurname.getText();
            String phoneNumber = txtfCellphoneNumber.getText();
            String emailAddress = txtfEmailAddress.getText();

            // Generates username and password using method from Guest class
            String generatedUsername = Guest.generateUsername(firstName, lastName, phoneNumber);
            String generatedPassword = Guest.generatePassword(firstName);

            try {
                // Establishes a database connection
                Connection connection = DriverManager.getConnection(databaseURL);

                // Inserts a user and guest object to tblUser and tblGuest in the database
                User.insertUser(connection, generatedUsername, generatedPassword, firstName, lastName);
                Guest.insertGuest(connection, generatedUsername, generatedPassword, firstName, lastName, phoneNumber, emailAddress, checkInDate, checkOutDate);

                // Sets guest information in ReservationDataController class
                ReservationDataController.setGuestName(firstName);
                ReservationDataController.setGuestSurname(lastName);
                ReservationDataController.setGuestPhoneNumber(phoneNumber);
                ReservationDataController.setEmailAddress(emailAddress);
                ReservationDataController.setUsername(generatedUsername);

                // Closes the current screen and opens the next one
                new UsernamePasswordGuest(generatedUsername, generatedPassword).setVisible(true); // Passes the generated username and password to the next screen
                this.dispose(); // Closes the current frame
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "An error occurred while processing your request.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Method to check if personal information entered is valid
    private boolean isPersonalInfoValid() {
        // Retrieves user's details from the GUI
        String firstName = txtfFirstName.getText().trim();
        String surname = txtfSurname.getText().trim();
        String emailAddress = txtfEmailAddress.getText().trim();
        String cellphoneNumber = txtfCellphoneNumber.getText().trim();

        // Validates first name (no integers)
        if (firstName.isEmpty() || !firstName.matches("^[a-zA-Z]+$")) {
            // Displays an error message using JOptionPane if the first name is empty or contains non-alphabetical characters
            JOptionPane.showMessageDialog(this, "Please enter a valid first name.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            // Returns false to indicate that the input is not valid
            return false;
        }

        // Validates surname (no integers)
        if (surname.isEmpty() || !surname.matches("^[a-zA-Z]+$")) {
            // Displays an error message using JOptionPane if the surname is empty or contains non-alphabetical characters
            JOptionPane.showMessageDialog(this, "Please enter a valid surname.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            // Returns false to indicate that the input is not valid
            return false;
        }

        // Validates email address format
        if (emailAddress.isEmpty() || !emailAddress.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$")) {
            // Display an error message using JOptionPane if the email address is empty or does not match the specified format
            JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            // Return false to indicate that the input is not valid
            return false;
        }

        // Validates cellphone number (no letters) AND (between 7 and 15 digits)
        if (cellphoneNumber.isEmpty() || !cellphoneNumber.matches("^[0-9]{7,15}$")) {
            // Display an error message using JOptionPane if the cellphone number is empty, contains non-digit characters, or is not within the specified length range
            JOptionPane.showMessageDialog(this, "Please enter a valid cellphone number (between 7 and 15 digits).", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            // Return false to indicate that the input is not valid
            return false;
        }

        return true; // All inputs are valid

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonalAndContactDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonalAndContactDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonalAndContactDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonalAndContactDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonalAndContactDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCellphoneNumber;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblPersonalInformationHeading;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JTextField txtfCellphoneNumber;
    private javax.swing.JTextField txtfEmailAddress;
    private javax.swing.JTextField txtfFirstName;
    private javax.swing.JTextField txtfSurname;
    // End of variables declaration//GEN-END:variables
}
