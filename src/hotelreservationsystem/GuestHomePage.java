/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelreservationsystem;

import hotelreservationsystem.GUIs.ChangeUsernameAndPasswordGuest;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mikaela Padayachie
 */
public class GuestHomePage extends javax.swing.JFrame {

    private static String loggedInUsername;
    public static String loggedInPassword;
    String databaseURL = "jdbc:ucanaccess://HotelReservation.accdb";
    private List<Room> listOfRooms;
    private Room guestRoom;

    /**
     * Creates new form GuestHomePage
     *
     * @param GuestID
     * @param GuestUsername
     */
    public GuestHomePage(String GuestID, String GuestUsername) {
        initComponents();
        GuestHomePage.loggedInUsername = GuestID; // Store the provided username
        GuestHomePage.loggedInPassword = GuestUsername; // Stores the provided password
        lblHelloGuestName.setText("Hello, " + GuestID); // Displays "Hello + GuestUsername" in a Jlabel
    }

    public GuestHomePage() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBackground3 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnMenu1 = new javax.swing.JButton();
        lblHelloGuestName = new javax.swing.JLabel();
        lblWhatWouldYouLikeToDo = new javax.swing.JLabel();
        lblCancelReservation = new javax.swing.JLabel();
        btnCancelReservation = new javax.swing.JButton();
        btnReviewReservation = new javax.swing.JButton();
        btnChangeUsernameAndPassword = new javax.swing.JButton();
        lblCancelReservation1 = new javax.swing.JLabel();
        lblCancelReservation2 = new javax.swing.JLabel();
        lblReviewReservation2 = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        lblBackground3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/white background.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExit.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnExit.setText("exit");
        btnExit.setToolTipText("click here to terminate your reservation");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnMenu1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnMenu1.setText("menu");
        btnMenu1.setToolTipText("click here for menu");
        btnMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenu1ActionPerformed(evt);
            }
        });

        lblHelloGuestName.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblHelloGuestName.setForeground(new java.awt.Color(0, 0, 255));
        lblHelloGuestName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHelloGuestName.setText("Hello,");

        lblWhatWouldYouLikeToDo.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblWhatWouldYouLikeToDo.setForeground(new java.awt.Color(0, 0, 255));
        lblWhatWouldYouLikeToDo.setText("What would you like to do?");

        lblCancelReservation.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblCancelReservation.setText("CANCEL RESERVATION");

        btnCancelReservation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cancelReservation.jpg"))); // NOI18N
        btnCancelReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelReservationActionPerformed(evt);
            }
        });

        btnReviewReservation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/reviewReservation.jpg"))); // NOI18N
        btnReviewReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReviewReservationActionPerformed(evt);
            }
        });

        btnChangeUsernameAndPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cancelReservation.jpg"))); // NOI18N
        btnChangeUsernameAndPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeUsernameAndPasswordActionPerformed(evt);
            }
        });

        lblCancelReservation1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblCancelReservation1.setText("CHANGE USERNAME");

        lblCancelReservation2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblCancelReservation2.setText("AND PASSWORD");

        lblReviewReservation2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblReviewReservation2.setText("REVIEW RESERVATION");

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/white background.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReviewReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCancelReservation)
                                .addGap(38, 38, 38)
                                .addComponent(lblReviewReservation2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(209, 209, 209)
                                .addComponent(btnChangeUsernameAndPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(lblCancelReservation2))
                                .addComponent(lblCancelReservation1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(lblWhatWouldYouLikeToDo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExit)
                        .addGap(91, 91, 91)
                        .addComponent(lblHelloGuestName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMenu1)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 545, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHelloGuestName)
                    .addComponent(btnMenu1)
                    .addComponent(btnExit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblWhatWouldYouLikeToDo)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblReviewReservation2)
                            .addComponent(lblCancelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblCancelReservation1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCancelReservation2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnChangeUsernameAndPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReviewReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenu1ActionPerformed
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnMenu1ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // This method confirms if the user wants to end the program upon pressing the 'exit' button
        int choice = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to exit?\nThis will terminate your current action",
                "Exit Confirmation", // Displays a confirmation dialog with a warning message
                JOptionPane.YES_NO_OPTION, // Provides Yes and No button
                JOptionPane.WARNING_MESSAGE // Uses a warning icon
        );

        if (choice == JOptionPane.YES_OPTION) {
            System.exit(0); // Terminate the program
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnCancelReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelReservationActionPerformed
        // Get the userID for the logged-in user
        String userID = User.getUserIdFromDatabase(loggedInUsername);

        // Checks if a valid userID was retrieved
        if (userID != null) {
            List<Reservation> reservations = getUserReservations(userID);

            if (reservations.isEmpty()) {
                JOptionPane.showMessageDialog(this, "You don't have any reservations to cancel.", "No Reservations", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Creates an array of reservation descriptions to display in the dialog box
                String[] reservationOptions = new String[reservations.size()];
                for (int i = 0; i < reservations.size(); i++) {
                    Reservation reservation = reservations.get(i);
                    String option = " - Check-in: " + reservation.getCheckInDate()
                            + " - Check-out: " + reservation.getCheckOutDate();
                    reservationOptions[i] = option;
                }

                // Displays the list of reservations for the user to select
                String selectedReservation = (String) JOptionPane.showInputDialog(this, "Select a reservation to cancel:", "Cancel Reservation", JOptionPane.QUESTION_MESSAGE, null, reservationOptions, reservationOptions[0]);

                if (selectedReservation != null) {
                    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel this reservation?", "Confirm Cancellation", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {

                        try (Connection connection = DriverManager.getConnection(databaseURL)) {
                            String sql = "SELECT * FROM tblReservation WHERE UserID = ?";
                            PreparedStatement statement = connection.prepareStatement(sql);
                            statement.setString(1, userID);

                            // Calls the cancelReservation method from the Reservation class
                            Reservation.deleteReservation(connection, userID);

                            // Shows a confirmation message
                            JOptionPane.showMessageDialog(this, "Reservation canceled successfully.", "Reservation Canceled", JOptionPane.INFORMATION_MESSAGE);
                        } catch (SQLException ex) {
                            Logger.getLogger(GuestHomePage.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "User not found.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnCancelReservationActionPerformed

    private List<Reservation> getUserReservations(String userID) {
        List<Reservation> reservations = new ArrayList<>();
        System.out.println("Retrieving reservations for userID: " + userID);

        try (Connection connection = DriverManager.getConnection(databaseURL)) {
            String sql = "SELECT * FROM tblReservation WHERE UserID = ?";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, userID);

            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                // Retrieves reservation details and create a Reservation object
                String UserID = resultSet.getString("UserID");
                String roomID = resultSet.getString("RoomID");
                String guestName = resultSet.getString("GuestName");
                String guestPhoneNumber = resultSet.getString("GuestPhoneNumber");
                String guestEmailAddress = resultSet.getString("GuestEmailAddress");
                LocalDate checkInDate = resultSet.getDate("CheckInDate").toLocalDate();
                LocalDate checkOutDate = resultSet.getDate("CheckOutDate").toLocalDate();
                Boolean paid = resultSet.getBoolean("Paid");
                double totalCost = resultSet.getDouble("TotalCost");

                // Creates a Reservation object and add it to the list
                Reservation reservation = new Reservation(userID, roomID, guestName, guestPhoneNumber, guestEmailAddress, checkInDate, checkOutDate, paid, totalCost);
                reservations.add(reservation);
            }
        } catch (SQLException ex) {
            System.out.println("UNABLE TO RETRIEVE RESERVATIONS");
        }

        return reservations;
    }


    private void btnChangeUsernameAndPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeUsernameAndPasswordActionPerformed
        new ChangeUsernameAndPasswordGuest(loggedInPassword).setVisible(true); // Takes user to ChangeUsernameAndPasswordGuest screen
        this.setVisible(false); // closes this screen
    }//GEN-LAST:event_btnChangeUsernameAndPasswordActionPerformed

    private void btnReviewReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReviewReservationActionPerformed

        // Gets the userID for the logged-in user
        String userID = User.getUserIdFromDatabase(loggedInUsername);

        if (userID != null) {
            // Creates an instance of the ReservationTable class with the user's ID
            ReservationTable reservationTable = new ReservationTable(userID);
            reservationTable.setVisible(true);

            // Sets it visible
            reservationTable.setVisible(true);
        }
    }//GEN-LAST:event_btnReviewReservationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuestHomePage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuestHomePage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuestHomePage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuestHomePage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuestHomePage().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelReservation;
    private javax.swing.JButton btnChangeUsernameAndPassword;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMenu1;
    private javax.swing.JButton btnReviewReservation;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBackground3;
    private javax.swing.JLabel lblCancelReservation;
    private javax.swing.JLabel lblCancelReservation1;
    private javax.swing.JLabel lblCancelReservation2;
    private javax.swing.JLabel lblHelloGuestName;
    private javax.swing.JLabel lblReviewReservation2;
    private javax.swing.JLabel lblWhatWouldYouLikeToDo;
    // End of variables declaration//GEN-END:variables
}
